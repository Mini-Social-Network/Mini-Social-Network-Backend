name: CI/CD Pipeline branch dev

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build each service with Gradle and create Docker images
        run: |
          services=("apigateway-service" "eureka-service" "auth-service" "user-service" "system-service" "chat-service" "post-service" "notify-service" "config-service")
          for service in "${services[@]}"; do
            echo "Building $service with Gradle"
            cd $service
            ./gradlew build
            cd ..
          done

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Images
        run: |
          services=("apigateway-service" "eureka-service" "auth-service" "user-service" "system-service" "chat-service" "post-service" "notify-service" "config-service")
          for service in "${services[@]}"; do
            echo "Building Docker image for $service"
            docker build -t ${{ secrets.DOCKER_USERNAME }}/$service:${{ github.sha }} ./$service
            echo "Pushing Docker image for $service"
            docker push ${{ secrets.DOCKER_USERNAME }}/$service:${{ github.sha }}
          done

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull Docker Images
        run: |
          services=("apigateway-service" "eureka-service" "auth-service" "user-service" "system-service" "chat-service" "post-service" "notify-service" "config-service")
          for service in "${services[@]}"; do
            echo "Pulling Docker image for $service"
            docker pull ${{ secrets.DOCKER_USERNAME }}/$service:${{ github.sha }}
          done

      - name: Deploy with Docker Compose
        run: |
          export TAG=${{ github.sha }}
          docker-compose down
          docker-compose up -d
